/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AppointmentDetails as PrismaAppointmentDetails,
} from "@prisma/client";

export class AppointmentDetailsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AppointmentDetailsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.appointmentDetails.count(args);
  }

  async appointmentDetailsItems(
    args: Prisma.AppointmentDetailsFindManyArgs
  ): Promise<PrismaAppointmentDetails[]> {
    return this.prisma.appointmentDetails.findMany(args);
  }
  async appointmentDetails(
    args: Prisma.AppointmentDetailsFindUniqueArgs
  ): Promise<PrismaAppointmentDetails | null> {
    return this.prisma.appointmentDetails.findUnique(args);
  }
  async createAppointmentDetails(
    args: Prisma.AppointmentDetailsCreateArgs
  ): Promise<PrismaAppointmentDetails> {
    return this.prisma.appointmentDetails.create(args);
  }
  async updateAppointmentDetails(
    args: Prisma.AppointmentDetailsUpdateArgs
  ): Promise<PrismaAppointmentDetails> {
    return this.prisma.appointmentDetails.update(args);
  }
  async deleteAppointmentDetails(
    args: Prisma.AppointmentDetailsDeleteArgs
  ): Promise<PrismaAppointmentDetails> {
    return this.prisma.appointmentDetails.delete(args);
  }
}
