/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PhlebotomistDetails as PrismaPhlebotomistDetails,
} from "@prisma/client";

export class PhlebotomistDetailsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PhlebotomistDetailsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.phlebotomistDetails.count(args);
  }

  async phlebotomistDetailsItems(
    args: Prisma.PhlebotomistDetailsFindManyArgs
  ): Promise<PrismaPhlebotomistDetails[]> {
    return this.prisma.phlebotomistDetails.findMany(args);
  }
  async phlebotomistDetails(
    args: Prisma.PhlebotomistDetailsFindUniqueArgs
  ): Promise<PrismaPhlebotomistDetails | null> {
    return this.prisma.phlebotomistDetails.findUnique(args);
  }
  async createPhlebotomistDetails(
    args: Prisma.PhlebotomistDetailsCreateArgs
  ): Promise<PrismaPhlebotomistDetails> {
    return this.prisma.phlebotomistDetails.create(args);
  }
  async updatePhlebotomistDetails(
    args: Prisma.PhlebotomistDetailsUpdateArgs
  ): Promise<PrismaPhlebotomistDetails> {
    return this.prisma.phlebotomistDetails.update(args);
  }
  async deletePhlebotomistDetails(
    args: Prisma.PhlebotomistDetailsDeleteArgs
  ): Promise<PrismaPhlebotomistDetails> {
    return this.prisma.phlebotomistDetails.delete(args);
  }
}
